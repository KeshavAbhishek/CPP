alignas
alignof
and
and_eq
asm
auto
bitand
bitor
bool
break
case
catch
char
char8_t
char16_t
char32_t
class
compl
concept
const
consteval
constexpr
const_cast
continue
co_await
co_return
co_yield
decltype
default
delete
do
double
dynamic_cast
else
enum
explicit
export
extern
false
float
for
friend
goto
if
inline
int
long
mutable
namespace
new
noexcept
not
not_eq
nullptr
operator
or
or_eq
private
protected
public
register
reinterpret_cast
requires
return
short
signed
sizeof
static
static_assert
static_cast
struct
switch
synchronized
template
this
thread_local
throw
true
try
typedef
typeid
typename
union
unsigned
using
virtual
void
volatile
wchar_t
while
xor
xor_eq








*alignas*
*decltype*
*namespace*
*struct*
*alignof*
*default*
*new*
*switch*
*and*
*delete*
*noexcept*
*template*
*and_eq*
*do*
*not*
*this*
*asm*
*double*
*not_eq*
*thread_local*
*auto*
*dynamic_cast*
*nullptr*
*throw*
*bitand*
*else*
*operator*
*true*
*bitor*
*enum*
*or*
*try*
*bool*
*explicit*
*or_eq*
*typedef*
*break*
*export*
*private*
*typeid*
*case*
*extern*
*protected*
*typename*
*catch*
*false*
*public*
*union*
*char*
*float*
*register*
*unsigned*
*char16_t*
*for*
*reinterpret_cast*
*using*
*char32_t*
*friend*
*return*
*virtual*
*class*
*goto*
*short*
*void*
*compl*
*if*
*signed*
*volatile*
*const*
*inline*
*sizeof*
*wchar_t*
*constexpr*
*int*
*static*
*while*
*const_cast*
*long*
*static_assert*
*xor*
*continue*
*mutable*
*static_cast*
*xor_eq*